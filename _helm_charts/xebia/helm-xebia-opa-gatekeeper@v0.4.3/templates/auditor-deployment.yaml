{{ if .Values.auditor.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: auditor
  namespace: '{{ .Values.auditor.namespace }}'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auditor
  namespace: '{{ .Values.auditor.namespace }}'
  labels:
    app: auditor
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  selector:
    matchLabels:
      app: auditor
  replicas: 1
  template:
    metadata:
      labels:
        app: auditor
    spec:
      serviceAccountName: auditor
      containers:
        - name: auditor
          command: ["./app", "policy", "audit"]
          image: '{{ .Values.auditor.image }}'
          imagePullPolicy: IfNotPresent # IfNotPresent | Always
          env:
          - name: SERVER-ADDR
            value: '{{ .Values.auditor.serverAddr }}'
          - name: AUDIT-INTERVAL
            value: '{{ .Values.auditor.interval }}'
          resources: {{ toYaml .Values.auditor.resources | nindent 12 }}
          securityContext: 
            runAsNonRoot: true
            privileged: false
            allowPrivilegeEscalation: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: auditor-read-only
rules:
- apiGroups:
  - "*"
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auditor-read-only-binding
roleRef:
  kind: ClusterRole
  name: auditor-read-only 
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: auditor
  namespace: '{{ .Values.auditor.namespace }}'
{{ end }}